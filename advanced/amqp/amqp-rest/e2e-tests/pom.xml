<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>amqp-rest-e2e-tests</artifactId>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.tsdes.advanced.amqp</groupId>
        <artifactId>amqp-rest</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <!--
            Make sure that you add the dependencies to the other
            modules here, even if you do not use them.
            The point is to force Maven to build the e2e-tests
            module AFTER the others have been built, and so
            the Docker images can be created because the
            executable jars exist.
            Note: to achieve this, we also need to make sure that
            our tests in this module are integration tests, ie
            ending with "IT", which will be executed after the
            "package" phase.
            If you don't, then executing "mvn clean test" will
            fail when reaching this module.
        -->
        <dependency>
            <groupId>org.tsdes.advanced.amqp</groupId>
            <artifactId>amqp-rest-receiver</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.tsdes.advanced.amqp</groupId>
            <artifactId>amqp-rest-sender</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
        </dependency>

    </dependencies>



</project>